) +
theme(strip.text.y = element_text(size = 12, angle = 180)) +
theme(strip.text.x = element_text(size = 12)) +
theme(plot.title = element_text(size = 20))
ggplot(data, aes(x = season, y = factor(week, levels = rev(sort(week))), fill = rating)) +
geom_tile(color = "white") +
coord_equal(ratio = 1) +
labs(
x = "Seasons",
y = "Episodes",
title = "South Park Episode Ratings",
fill = "Legend"
) +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
# axis.text.x = element_blank(),
# axis.text.y = element_blank(),
axis.ticks = element_blank()
) +
theme(strip.text.y = element_text(size = 12, angle = 180)) +
theme(strip.text.x = element_text(size = 12)) +
theme(plot.title = element_text(size = 20))
ggplot(data, aes(x = season, y = factor(episode, levels = rev(sort(episode))), fill = rating)) +
geom_tile(color = "white") +
coord_equal(ratio = 1) +
labs(
x = "Seasons",
y = "Episodes",
title = "South Park Episode Ratings",
fill = "Legend"
) +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
# axis.text.x = element_blank(),
# axis.text.y = element_blank(),
axis.ticks = element_blank()
) +
theme(strip.text.y = element_text(size = 12, angle = 180)) +
theme(strip.text.x = element_text(size = 12)) +
theme(plot.title = element_text(size = 20))
ggplot(data, aes(x = season, y = factor(episode, levels = rev(sort(unique(episode)))), fill = rating)) +
geom_tile(color = "white") +
coord_equal(ratio = 1) +
labs(
x = "Seasons",
y = "Episodes",
title = "South Park Episode Ratings",
fill = "Legend"
) +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
# axis.text.x = element_blank(),
# axis.text.y = element_blank(),
axis.ticks = element_blank()
) +
theme(strip.text.y = element_text(size = 12, angle = 180)) +
theme(strip.text.x = element_text(size = 12)) +
theme(plot.title = element_text(size = 20))
ggplot(data, aes(x = season, y = factor(episode, levels = rev(sort(unique(episode)))), fill = rating)) +
geom_tile(color = "white") +
coord_equal(ratio = 1) +
labs(
x = "Seasons",
y = "Episodes",
title = "South Park Episode Ratings",
fill = "Legend"
) +
scale_x_discrete(position = "top") +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.ticks = element_blank()
) +
theme(strip.text.y = element_text(size = 12, angle = 180)) +
theme(strip.text.x = element_text(size = 12)) +
theme(plot.title = element_text(size = 20))
ggplot(data, aes(x = season, y = factor(episode, levels = rev(sort(unique(episode)))), fill = rating)) +
geom_tile(color = "white") +
coord_equal(ratio = 1) +
labs(
x = "Seasons",
y = "Episodes",
title = "South Park Episode Ratings",
fill = "Legend"
) +
scale_x_continuous(position = "top") +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.ticks = element_blank()
) +
theme(strip.text.y = element_text(size = 12, angle = 180)) +
theme(strip.text.x = element_text(size = 12)) +
theme(plot.title = element_text(size = 20))
ggplot(data, aes(x = as.factor(season), y = factor(episode, levels = rev(sort(unique(episode)))), fill = rating)) +
geom_tile(color = "white") +
coord_equal(ratio = 1) +
labs(
x = "Seasons",
y = "Episodes",
title = "South Park Episode Ratings",
fill = "Legend"
) +
scale_x_continuous(position = "top") +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.ticks = element_blank()
) +
theme(strip.text.y = element_text(size = 12, angle = 180)) +
theme(strip.text.x = element_text(size = 12)) +
theme(plot.title = element_text(size = 20))
ggplot(data, aes(x = as.factor(season), y = factor(episode, levels = rev(sort(unique(episode)))), fill = rating)) +
geom_tile(color = "white") +
coord_equal(ratio = 1) +
labs(
x = "Seasons",
y = "Episodes",
title = "South Park Episode Ratings",
fill = "Legend"
) +
scale_x_discrete(position = "top") +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.ticks = element_blank()
) +
theme(strip.text.y = element_text(size = 12, angle = 180)) +
theme(strip.text.x = element_text(size = 12)) +
theme(plot.title = element_text(size = 20))
ggplot(data, aes(x = as.factor(season), y = factor(episode, levels = rev(sort(unique(episode)))), fill = rating)) +
geom_tile(color = "white") +
scale_fill_gradient(low = "white", high = "red") +
coord_equal(ratio = 1) +
labs(
x = "Seasons",
y = "Episodes",
title = "South Park Episode Ratings",
fill = "Legend"
) +
scale_x_discrete(position = "top") +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.ticks = element_blank()
) +
theme(strip.text.y = element_text(size = 12, angle = 180)) +
theme(strip.text.x = element_text(size = 12)) +
theme(plot.title = element_text(size = 20))
min(data$rating)
ggplot(data, aes(x = as.factor(season), y = factor(episode, levels = rev(sort(unique(episode)))), fill = rating)) +
geom_tile(color = "white") +
scale_fill_gradientn(colors = c("red", "green"), values = c(min(data$rating), max(data$rating))) +
coord_equal(ratio = 1) +
labs(
x = "Seasons",
y = "Episodes",
title = "South Park Episode Ratings",
fill = "Legend"
) +
scale_x_discrete(position = "top") +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.ticks = element_blank()
) +
theme(strip.text.y = element_text(size = 12, angle = 180)) +
theme(strip.text.x = element_text(size = 12)) +
theme(plot.title = element_text(size = 20))
ggplot(data, aes(x = as.factor(season), y = factor(episode, levels = rev(sort(unique(episode)))), fill = rating)) +
geom_tile(color = "white") +
scale_fill_gradient(colors = c("red", "green"), values = c(min(data$rating), max(data$rating))) +
coord_equal(ratio = 1) +
labs(
x = "Seasons",
y = "Episodes",
title = "South Park Episode Ratings",
fill = "Legend"
) +
scale_x_discrete(position = "top") +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.ticks = element_blank()
) +
theme(strip.text.y = element_text(size = 12, angle = 180)) +
theme(strip.text.x = element_text(size = 12)) +
theme(plot.title = element_text(size = 20))
ggplot(data, aes(x = as.factor(season), y = factor(episode, levels = rev(sort(unique(episode)))), fill = rating)) +
geom_tile(color = "white") +
scale_fill_gradient(low = "red", high = "green") +
coord_equal(ratio = 1) +
labs(
x = "Seasons",
y = "Episodes",
title = "South Park Episode Ratings",
fill = "Legend"
) +
scale_x_discrete(position = "top") +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.ticks = element_blank()
) +
theme(strip.text.y = element_text(size = 12, angle = 180)) +
theme(strip.text.x = element_text(size = 12)) +
theme(plot.title = element_text(size = 20))
ggplot(data, aes(x = as.factor(season), y = factor(episode, levels = rev(sort(unique(episode)))), fill = rating)) +
geom_tile(color = "white") +
scale_fill_gradient(low = "red", high = "green") +
coord_equal(ratio = 1) +
labs(
x = "Seasons",
y = "Episodes",
title = "South Park Episode Ratings",
fill = "IMDb User Rating"
) +
scale_x_discrete(position = "top") +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.ticks = element_blank()
) +
theme(strip.text.y = element_text(size = 12, angle = 180)) +
theme(strip.text.x = element_text(size = 12)) +
theme(plot.title = element_text(size = 20))
ggplot(data, aes(x = as.factor(season), y = factor(episode, levels = rev(sort(unique(episode)))), fill = rating)) +
geom_tile(color = "white") +
scale_fill_gradient(low = "red", high = "green") +
coord_equal(ratio = 1) +
labs(
x = "Seasons",
y = "Episodes",
title = "South Park Episode Ratings",
fill = "Rating"
) +
scale_x_discrete(position = "top") +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.ticks = element_blank()
) +
theme(strip.text.y = element_text(size = 12, angle = 180)) +
theme(strip.text.x = element_text(size = 12)) +
theme(plot.title = element_text(size = 20))
ggplot(data, aes(x = as.factor(season), y = factor(episode, levels = rev(sort(unique(episode)))), fill = rating)) +
geom_tile(color = "white") +
scale_fill_gradient(low = "white", high = "green") +
coord_equal(ratio = 1) +
labs(
x = "Seasons",
y = "Episodes",
title = "South Park Episode Ratings",
fill = "Rating"
) +
scale_x_discrete(position = "top") +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.ticks = element_blank()
) +
theme(strip.text.y = element_text(size = 12, angle = 180)) +
theme(strip.text.x = element_text(size = 12)) +
theme(plot.title = element_text(size = 20))
ggplot(data, aes(x = as.factor(season), y = factor(episode, levels = rev(sort(unique(episode)))), fill = rating)) +
geom_tile(color = "white") +
scale_fill_gradient(low = "F4F269", high = "5CB270") +
coord_equal(ratio = 1) +
labs(
x = "Seasons",
y = "Episodes",
title = "South Park Episode Ratings",
fill = "Rating"
) +
scale_x_discrete(position = "top") +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.ticks = element_blank()
) +
theme(strip.text.y = element_text(size = 12, angle = 180)) +
theme(strip.text.x = element_text(size = 12)) +
theme(plot.title = element_text(size = 20))
ggplot(data, aes(x = as.factor(season), y = factor(episode, levels = rev(sort(unique(episode)))), fill = rating)) +
geom_tile(color = "white") +
scale_fill_gradient(low = "#F4F269", high = "#5CB270") +
coord_equal(ratio = 1) +
labs(
x = "Seasons",
y = "Episodes",
title = "South Park Episode Ratings",
fill = "Rating"
) +
scale_x_discrete(position = "top") +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.ticks = element_blank()
) +
theme(strip.text.y = element_text(size = 12, angle = 180)) +
theme(strip.text.x = element_text(size = 12)) +
theme(plot.title = element_text(size = 20))
ggplot(data, aes(x = as.factor(season), y = factor(episode, levels = rev(sort(unique(episode)))), fill = rating)) +
geom_tile(color = "white") +
scale_fill_gradient(low = "#FF0000", high = "#00FF00") +
coord_equal(ratio = 1) +
labs(
x = "Seasons",
y = "Episodes",
title = "South Park Episode Ratings",
fill = "Rating"
) +
scale_x_discrete(position = "top") +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.ticks = element_blank()
) +
theme(strip.text.y = element_text(size = 12, angle = 180)) +
theme(strip.text.x = element_text(size = 12)) +
theme(plot.title = element_text(size = 20))
ggplot(data, aes(x = as.factor(season), y = factor(episode, levels = rev(sort(unique(episode)))), fill = rating)) +
geom_tile(color = "white") +
scale_fill_gradient(low = "#b0f2bc", high = "#257d98") +
coord_equal(ratio = 1) +
labs(
x = "Seasons",
y = "Episodes",
title = "South Park Episode Ratings",
fill = "Rating"
) +
scale_x_discrete(position = "top") +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.ticks = element_blank()
) +
theme(strip.text.y = element_text(size = 12, angle = 180)) +
theme(strip.text.x = element_text(size = 12)) +
theme(plot.title = element_text(size = 20))
ggplot(data, aes(x = as.factor(season), y = factor(episode, levels = rev(sort(unique(episode)))), fill = rating)) +
geom_tile(color = "white") +
scale_fill_gradient(low = "#b0f2bc", high = "#257d98") +
coord_equal(ratio = 1) +
labs(
x = "Seasons",
y = "Episodes",
title = "South Park Episode Ratings",
subtitle = "From IMDb User Ratings",
fill = "Rating"
) +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.ticks = element_blank()
) +
theme(strip.text.y = element_text(size = 12, angle = 180)) +
theme(strip.text.x = element_text(size = 12)) +
theme(plot.title = element_text(size = 20))
ggplot(data, aes(x = as.factor(season), y = factor(episode, levels = rev(sort(unique(episode)))), fill = rating)) +
geom_tile(color = "white") +
scale_fill_gradient(low = "#b0f2bc", high = "#257d98") +
coord_equal(ratio = 1) +
labs(
x = "Season",
y = "Episode",
title = "South Park Episode Ratings",
subtitle = "From IMDb User Ratings",
fill = "Rating"
) +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.ticks = element_blank()
) +
theme(strip.text.y = element_text(size = 12, angle = 180)) +
theme(strip.text.x = element_text(size = 12)) +
theme(plot.title = element_text(size = 20))
ggplot(data, aes(x = as.factor(season), y = factor(episode, levels = rev(sort(unique(episode)))), fill = rating)) +
geom_tile(color = "white") +
scale_fill_gradient(low = "#b0f2bc", high = "#257d98") +
coord_equal(ratio = 1) +
labs(
x = "Season",
y = "Episode",
title = "South Park Episode Ratings",
subtitle = "From IMDb User Ratings",
caption = "Visualization by @yaylinda",
fill = "Rating"
) +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.ticks = element_blank()
) +
theme(strip.text.y = element_text(size = 12, angle = 180)) +
theme(strip.text.x = element_text(size = 12)) +
theme(plot.title = element_text(size = 20))
unique(data$season)
data[which(data$season == 1)]
data[which(data$season == 1), ]
data[which(data$season == 1), ]$rating
mean(data[which(data$season == 1), ]$rating)
mean(data[which(data$season == 1), 3])
mean(data[which(data$season == 1), rating])
mean(data[which(data$season == 1), data$rating])
mean(data[which(data$season == 1), 3])
data = rbind(data, c(season, 'Average', mean(data[which(data$season == season), 3])))
for (season in unique(data$season)) {
data = rbind(data, c(season, 'Average', mean(data[which(data$season == season), 3])))
}
View(data)
data = read.csv('data.csv')
averages = data.frame()
for (season in unique(data$season)) {
averages = rbind(averages, c(season, 'Average', mean(data[which(data$season == season), 3])))
}
View(averages)
data = rbind(data, average)
data = rbind(data, averages)
averages = data.frame("season", "episode", "rating")
for (season in unique(data$season)) {
averages = rbind(averages, c(season, 'Average', mean(data[which(data$season == season), 3])))
}
data = rbind(data, averages)
data$episode = as.factor(data$episode)
averages = data.frame("season", "episode", "rating")
for (season in unique(data$season)) {
averages = rbind(averages, c(season, 'Average', mean(data[which(data$season == season), 3])))
}
data = rbind(data, averages)
data = rbind(data, averages)
View(averages)
averages = data.frame(c("season", "episode", "rating"))
View(averages)
averages = data.frame(matrix(ncol=3,nrow=0, dimnames=list(NULL, c("season", "episode", "rating"))))
for (season in unique(data$season)) {
averages = rbind(averages, c(season, 'Average', mean(data[which(data$season == season), 3])))
}
View(averages)
averages = data.frame()
colnames(averages) = c("season", "episode", "rating")
for (season in unique(data$season)) {
averages = rbind(averages, c(season, 'Average', mean(data[which(data$season == season), 3])))
}
colnames(averages) = c("season", "episode", "rating")
data = rbind(data, averages)
ggplot(data, aes(x = as.factor(season), y = factor(episode, levels = rev(sort(unique(episode)))), fill = rating)) +
geom_tile(color = "white") +
scale_fill_gradient(low = "#b0f2bc", high = "#257d98") +
coord_equal(ratio = 1) +
labs(
x = "Season",
y = "Episode",
title = "South Park Episode Ratings",
subtitle = "From IMDb User Ratings",
caption = "Visualization by @yaylinda",
fill = "Rating"
) +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.ticks = element_blank()
) +
theme(strip.text.y = element_text(size = 12, angle = 180)) +
theme(strip.text.x = element_text(size = 12)) +
theme(plot.title = element_text(size = 20))
ggplot(data, aes(x = as.factor(season), y = factor(episode, levels = rev(sort(unique(episode)))), fill = as.numeric(rating))) +
geom_tile(color = "white") +
scale_fill_gradient(low = "#b0f2bc", high = "#257d98") +
coord_equal(ratio = 1) +
labs(
x = "Season",
y = "Episode",
title = "South Park Episode Ratings",
subtitle = "From IMDb User Ratings",
caption = "Visualization by @yaylinda",
fill = "Rating"
) +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.ticks = element_blank()
) +
theme(strip.text.y = element_text(size = 12, angle = 180)) +
theme(strip.text.x = element_text(size = 12)) +
theme(plot.title = element_text(size = 20))
data = read.csv('data.csv')
ggplot(data, aes(x = as.factor(season), y = factor(episode, levels = rev(sort(unique(episode)))), fill = rating)) +
geom_tile(color = "white") +
scale_fill_gradient(low = "#b0f2bc", high = "#257d98") +
coord_equal(ratio = 1) +
labs(
x = "Season",
y = "Episode",
title = "South Park Episode Ratings",
subtitle = "From IMDb User Ratings",
caption = "Visualization by @yaylinda",
fill = "Rating"
) +
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.ticks = element_blank()
) +
theme(strip.text.y = element_text(size = 12, angle = 180)) +
theme(strip.text.x = element_text(size = 12)) +
theme(plot.title = element_text(size = 20))
View(averages)
